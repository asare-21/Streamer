export const cfetch=()=>{fetch("/data").then(e=>e.json()).then(e=>{e.data.items.forEach(e=>{const t=e;if(t.fields.hasOwnProperty("background"));else if(t.fields.hasOwnProperty("description"))if(t.hasOwnProperty("videoLink")){const e=`\n            <img data-src=${t.fields.image.fields.file.url} alt="" data-lazy-load >\n           <p class="title" >${t.title["en-US"]}  </p>\n           \n           <p id="description" style="display:none">\n             ${t.fields.description}\n           </p>\n           <video data-src=${t.fields.videoLink}  controls style="width: 100%; height: auto; display:none"></video>\n          `,i=`<img data-src=${t.fields.image.fields.file.url} alt="" data-lazy-load > `,a=document.createElement("div"),n=document.createElement("div");n.className="previews",n.innerHTML=i,a.className="movie",a.innerHTML=e,document.querySelector(".movieContainer").append(a)}else{const e=`\n             <img data-src=${t.fields.image.fields.file.url} alt="" data-lazy-load >\n            <p class="title" >${t.fields.title}  </p>\n            \n            <p id="description" style="display:none">\n              ${t.fields.description}\n            </p>\n            <video data-src=${t.fields.videoLink}  controls style="width: 100%; height: auto; display:none"></video>\n            `,i=`<img data-src=${t.fields.image.fields.file.url} alt="" data-lazy-load > `,a=document.createElement("div"),n=document.createElement("div");n.className="previews",n.innerHTML=i,a.className="movie",a.innerHTML=e,document.querySelector(".movieContainer").append(a)}else{const e=` <img data-src=${t.fields.image.fields.file.url} alt="" data-lazy-load >\n                <p class="t">${t.fields.title}</p>`,i=document.createElement("div");i.className="previews",i.innerHTML=e,document.querySelector(".slide").append(i)}});const t=document.querySelectorAll("[data-src]"),i=new IntersectionObserver((e,t)=>{document.querySelector(".loader").classList.add("show"),document.body.style="overflow-y: scroll",e.forEach(e=>{e.isIntersecting&&(!function(e){const t=e.getAttribute("data-src");if(!t)return;e.src=t}(e.target),t.unobserve(e.target))})},{});t.forEach(e=>{i.observe(e)})})};